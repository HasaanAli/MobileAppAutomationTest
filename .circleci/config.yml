# Credits: 
#   CircleCI docs, 
#   https://www.brightec.co.uk/ideas/firebase-test-lab-circleci

version: 2
jobs:
  build:
    working_directory: ~/repository/AndroidDemo
    docker:
      - image: circleci/android:api-28-alpha  # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/repository
      - run:
          name: list all
          command: ls -a
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Unit Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Configure environment
          command: |
            echo 'export APK_PATH=`find . -path "*.apk" ! -path "*unaligned.apk" ! -path "*Test*.apk" -print -quit`' >> $BASH_ENV
            echo 'export TEST_APK_PATH=`find "." "-path" "*Test*.apk" -print -quit`' >> $BASH_ENV
      - run:
          name: Run UI Tests with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run
              --app ${APK_PATH}
              --test ${TEST_APK_PATH}
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
          no_output_timeout: 30m
      # --app <local_server_path>/<app_apk>.apk
      # --test <local_server_path>/<app_test_apk>.apk
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
